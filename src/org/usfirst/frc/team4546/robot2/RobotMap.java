// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team4546.robot2;
    
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Talon drivetrainfrontLeft;
    public static Talon drivetrainrearLeft;
    public static Talon drivetrainfrontRight;
    public static Talon drivetrainrearRight;
    public static RobotDrive drivetrainChassis;
    public static Gyro gyro;
    public static Talon liftMotor;
    public static Solenoid clawSolenoid;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static DigitalInput liftUpperLimit;
    public static DigitalInput liftLowerLimit;
    public static PowerDistributionPanel pdp;
    public static Compressor compressor;

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        drivetrainfrontLeft = new Talon(0);
        LiveWindow.addActuator("Drivetrain", "frontLeft", (Talon) drivetrainfrontLeft);
        
        drivetrainrearLeft = new Talon(1);
        LiveWindow.addActuator("Drivetrain", "rearLeft", (Talon) drivetrainrearLeft);
        
        drivetrainfrontRight = new Talon(2);
        LiveWindow.addActuator("Drivetrain", "frontRight", (Talon) drivetrainfrontRight);
        
        drivetrainrearRight = new Talon(3);
        LiveWindow.addActuator("Drivetrain", "rearRight", (Talon) drivetrainrearRight);
        
        drivetrainChassis = new RobotDrive(drivetrainfrontLeft, drivetrainrearLeft,
              drivetrainfrontRight, drivetrainrearRight);
        
        drivetrainChassis.setSafetyEnabled(true);
        drivetrainChassis.setExpiration(0.1);
        drivetrainChassis.setSensitivity(0.5);
        drivetrainChassis.setMaxOutput(1.0);

        drivetrainChassis.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        drivetrainChassis.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        gyro = new Gyro(0);
        LiveWindow.addSensor("Sensors", "Gyro", gyro);
        gyro.setSensitivity(0.007);
        liftMotor = new Talon(4);
        LiveWindow.addActuator("Lift", "liftMotor", (Talon) liftMotor);
        
        clawSolenoid = new Solenoid(0, 0);
        LiveWindow.addActuator("Lift", "clawSolenoid", clawSolenoid);
        
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        
        liftUpperLimit = new DigitalInput(0);
        liftLowerLimit = new DigitalInput(1);
        pdp = new PowerDistributionPanel();
        compressor = new Compressor();
    }
}
